spring.application.name=crm

# Include secrets file (if exists)
spring.config.import=optional:classpath:application-secrets.properties

spring.datasource.url=jdbc:postgresql://localhost:5432/crm?currentSchema=public
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql

# Security settings for testing
spring.security.user.name=admin
spring.security.user.password=admin

# Logging for debugging
logging.level.com.prospect.crm=DEBUG
logging.level.org.springframework.security=DEBUG

# Server settings
server.port=8080
server.servlet.context-path=/

# Jackson settings for better JSON formatting
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.fail-on-empty-beans=false

# Stripe Configuration
stripe.secret-key=sk_test_your_stripe_secret_key_here
stripe.publishable-key=pk_test_your_stripe_publishable_key_here
stripe.webhook-secret=whsec_your_webhook_secret_here
stripe.currency=usd
stripe.success-url=http://localhost:3000/payment/success
stripe.cancel-url=http://localhost:3000/payment/cancel

# OAuth2 Configuration (Custom Implementation)
# Disable Spring Boot OAuth2 auto-configuration
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientAutoConfiguration

# Custom OAuth Configuration - Use environment variables for security
oauth.google.client-id=${GOOGLE_CLIENT_ID:your_google_client_id_here}
oauth.google.client-secret=${GOOGLE_CLIENT_SECRET:your_google_client_secret_here}
oauth.google.scope=openid,profile,email,https://www.googleapis.com/auth/gmail.send,https://www.googleapis.com/auth/gmail.readonly,https://www.googleapis.com/auth/gmail.modify,https://www.googleapis.com/auth/gmail.labels
oauth.google.redirect-uri=http://localhost:8080/v1/oauth/callback/google

oauth.microsoft.client-id=${MICROSOFT_CLIENT_ID:your_microsoft_client_id_here}
oauth.microsoft.client-secret=${MICROSOFT_CLIENT_SECRET:your_microsoft_client_secret_here}
oauth.microsoft.scope=openid,profile,email,offline_access,https://graph.microsoft.com/Mail.Send,https://graph.microsoft.com/Mail.Read,https://graph.microsoft.com/Mail.ReadWrite,https://graph.microsoft.com/Mail.ReadWrite.Shared
oauth.microsoft.redirect-uri=http://localhost:8080/v1/oauth/callback/microsoft

# Custom OAuth Configuration
oauth.google.gmail-api-uri=https://gmail.googleapis.com/gmail/v1
oauth.microsoft.graph-api-uri=https://graph.microsoft.com/v1.0

# Email Configuration
email.smtp.host=smtp.gmail.com
email.smtp.port=587
email.smtp.auth=true
email.smtp.starttls.enable=true
email.smtp.ssl.trust=smtp.gmail.com

# OAuth Token Settings
oauth.token.expiration-buffer=300
oauth.refresh.threshold=600

# JWT Configuration
jwt.secret=${JWT_SECRET:eyJhbGciOiJIUzI1NiJ9X2N1c3RvbV9zZWNyZXRfa2V5X2Zvcl9wcm9zcGVjdF9jcm1fc3lzdGVtX3ZlcnlfbG9uZ19hbmRfc2VjdXJlX2Zvcl9wcm9kdWN0aW9uX3VzZV9tYWtlX2l0X3ZlcnlfbG9uZ19hbmRfc2VjdXJl}
jwt.issuer=prospect-crm
jwt.audience=prospect-crm-users
jwt.access-token-expiration=7200
jwt.refresh-token-expiration=28800
jwt.access-token-cookie-name=access_token
jwt.refresh-token-cookie-name=refresh_token
jwt.cookie-domain=
jwt.cookie-path=/
jwt.cookie-secure=false
jwt.cookie-http-only=true
jwt.cookie-max-age=28800